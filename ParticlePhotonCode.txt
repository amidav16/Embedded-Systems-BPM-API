//Sjekk pastebin linken hvis notepaden mangler noe: https://pastebin.com/XVA3DNqy


#include <math.h>
#define RAD_TO_DEG 57.295779513082320876798154814105
#define PI 3.1415926535897932384626433832795
//Analog read pins
const int xPin = D0;
const int yPin = D1;
const int zPin = D2;
 
//Pulse values
int firstPulse = 0;
int secondPulse = 0;
int delta = 0;
int BPM = 0;
int totalBeats = 0;
int endingCheck = 0;
//The minimum and maximum values that came from
//the accelerometer while standing still
//You very well may need to change these
int minVal = 265;
int maxVal = 402;
 
//to hold the calculated values
double x, y, z;
int xRead, yRead, zRead, xAng, yAng, zAng;
 
//Name of individual, change this when storing a different individuals sensor data
String name = "David";
//Print this string at the end of the google sheets file.
String Ending = "Ended";

void setup(){
    // initialize the serial communication:
    Serial.begin(9600);
    Particle.subscribe("hook-response/googleDocs", myHandler, MY_DEVICES);
    pinMode(A2, INPUT); // Setup for leads off detection LO +
    pinMode(A1, INPUT); // Setup for leads off detection LO -
   
 
}
 
void myHandler(const char *event, const char *data) {
  // Handle the integration response
}
 
void loop(){
  
endingCheck = millis();

    if(endingCheck >= 1800000) {
          Particle.publish("30 Minutes have passed...");
          Particle.publish("googleDocs", "{\"my_name\":\"" + Ending + "\", \"bpm_value\": \"" + Ending
          + "\", \"x\":\"" + Ending + "\", \"y\":\"" + Ending + "\", \"z\":\"" + Ending + "\" }", 60, PRIVATE);
          //Cheap way to prevent event "Ending" From printing more than once in a row
          endingCheck = 0;
    }
    //Check if AD8232 has a stable connection to your body
    else if((digitalRead(A2) == 1)||(digitalRead(A1) == 1)){
        Particle.publish("error, check cable connections");
    }
  
 
      else if(analogRead(A0) >= 2200){
          //Calculate the first pulse in millis for the math equation
         if(firstPulse == 0){
             firstPulse = millis();
             delay(500);
         }
         else{
             //Now that firstpulse has been calculated the loop will calculate the secondpulse in millis for the math equation
             secondPulse = millis();
             delta = secondPulse - firstPulse;
             BPM = (1.0/delta) * 60.0 * 1000;
             totalBeats++;
             firstPulse = 0;
             secondPulse = 0;
             
                 if(totalBeats >= 5){
                    totalBeats = 0;
                     
                     //read the analog values from the accelerometer
                    xRead = analogRead(xPin);
                    yRead = analogRead(yPin);
                    zRead = analogRead(zPin);
                   
                    //convert read values to degrees -90 to 90 – Needed for atan2
                    xAng = map(xRead, minVal, maxVal, -90, 90);
                    yAng = map(yRead, minVal, maxVal, -90, 90);
                    zAng = map(zRead, minVal, maxVal, -90, 90);
                   
                    //Caculate 360deg values like so: atan2(-yAng, -zAng)
                    //atan2 outputs the value of -p to p (radians)
                    //We are then converting the radians to degrees
                    x = RAD_TO_DEG * (atan2(-yAng, -zAng) + PI);
                    y = RAD_TO_DEG * (atan2(-xAng, -zAng) + PI);
                    z = RAD_TO_DEG * (atan2(-yAng, -xAng) + PI);
                     
                     //Publish the data to the google sheets when everything is calculated
                     Particle.publish("googleDocs", "{\"my_name\":\"" + name + "\", \"bpm_value\": \"" + String(BPM)
                     + "\", \"x\":\"" + String(x) + "\", \"y\":\"" + String(y) + "\", \"z\":\"" + String(z) + "\" }", 60, PRIVATE);
                     //Show 30 minuter timer progress.
                     Particle.publish("endingCheck", String(endingCheck), PRIVATE);
             }
         //Can avoid using delays
         delay(500);
     }
  }
}